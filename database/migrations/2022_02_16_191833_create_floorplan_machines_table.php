<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateFloorplanMachinesTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('floorplan_machines', function (Blueprint $table) {
            $table->bigIncrements('fpm_id');
            $table->integer('fmaudit_id')->nullable()->comment('FK for machines in FM Audits records.');
            $table->integer('fyer_groups_id')->nullable()->comment('FK to fyer_groups table. Col old name was save_name_id');
            $table->string('present_serial_number', 25)->nullable()->comment('Current serial_number');
            $table->string('proposed_serial_number', 25)->nullable()->comment('Proposed serial_number');
            
			$table->integer('present_spec_id')->nullable()->comment('FK machine_specs.spec_id for machines currently being used');
			$table->integer('proposed_spec_id')->nullable()->comment('FK machine_specs.spec_id for Proposed Machines ');
			
			$table->integer('present_floorplans_id')->nullable()->comment('FK Floorplans table where machine is currently located');
			$table->integer('proposed_floorplans_id')->nullable()->comment('FK for floorplans table where machine is proposed to be located');
			$table->integer('departments_id')->nullable()->comment('FK for departments table');
			$table->string('room_name', 40)->nullable()->comment('Was room_number in old table. Current room number or name');
			
			$table->string('mac_address', 30)->nullable()->comment('Mac address from FM Audit.');
			$table->string('ip_address', 30)->nullable()->comment('IP address from FM Audit.');
			//$table->string('vendor_device_id', 25)->nullable()->comment('The id that the vendor generates for a specific machine.');
			//$table->string('new_vendor_device_id', 25)->nullable()->comment('Proposed vendor machine id number generated by vendor.');
        	$table->integer('present_x_position')->nullable()->comment('Current x coordinate on floorplan map.');
			$table->integer('present_y_position')->nullable()->comment('Current y coordinate on floorplan map.');
        	$table->integer('proposed_x_position')->nullable()->comment('Proposed x coordinate of machine on floorplan map.');
			$table->integer('proposed_y_position')->nullable()->comment('Proposed y coordinate of machine on floorplan map.');
			$table->integer('present_type_id')->nullable()->comment('Present machine type. Kept for now, but may not need');
			$table->integer('proposed_type_id')->nullable()->comment('Proposed machine type. orig type_id - Kept for now, but may not need');
        	$table->string('present_vendor_mach_id', 50)->nullable()->comment('The id that the vendor generates for a specific machine.');
        	$table->string('proposed_vendor_mach_id', 50)->nullable()->comment('Proposed vendor machine id number generated by vendor.');
			
			$table->integer('budgeted_black')->nullable()->comment('Budgeted black volume');
			$table->integer('budgeted_color')->nullable()->comment('Budgeted color volume');
			$table->decimal('cpc_black', 7, 6)->nullable()->comment('cost per copy black');
			$table->decimal('cpc_color', 7, 6)->nullable()->comment('cost per copy color');
			//$table->integer('five_year_id')->nullable();
			
			$table->char('is_proposed', 1)->nullable()->comment('Y=yes, N=no, U=??');
			$table->char('under_contract', 1)->nullable()->comment('Is the device under contract with SPC. Y=yes, N=no, U=??');
			$table->dateTime('commencement_date')->nullable()->comment('Date device came on line.');
			$table->integer('commencement_black_meter')->nullable();
			$table->integer('commencement_color_meter')->nullable();
			$table->dateTime('closeout_date')->nullable();
						
			$table->timestamp('created_date')->useCurrent();
			$table->integer('created_by');
			$table->timestamp('modified_date')->useCurrent();
			$table->integer('modified_by');
        	$table->dateTime('deleted_at')->nullable();
        	
        	$table->index('present_serial_number', 'idx_serNum');  
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('floorplan_machines');
    }
}
